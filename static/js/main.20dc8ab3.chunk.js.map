{"version":3,"sources":["tic-tac-toe/Square.js","tic-tac-toe/Board.js","tic-tac-toe/Game.js","App.js","index.js"],"names":["Square","props","className","onClick","onChange","cell","chip","text","Board","useState","field","board","setBoard","change","setChange","turn","setTurn","from","prevState","ws","send","enemy_id","game_id","check_board","checkWin","Game","1","2","3","4","5","6","7","8","9","lines","i","length","a","b","c","setPanel","current","previous","end","WebSocket","App","panel","enemy","setEnemy","setGame_id","setCell","loading","setLoading","user_id","useEffect","onmessage","response","data","slice","JSON","parse","activePanel","id","size","stretched","style","marginTop","mode","left","console","log","textAlign","promise","key","bridge","answer","getInfo","ReactDOM","render","document","getElementById"],"mappings":"0iBAUeA,MAPf,SAAgBC,GAEZ,OACI,4BAAQC,UAAU,OAAOC,QAAS,kBAAMF,EAAMG,SAASH,EAAMI,KAAMJ,EAAMK,MAAM,KAASL,EAAMM,OCwDvFC,MAzDf,SAAeP,GAAQ,IAAD,EACQQ,mBAASR,EAAMS,OADvB,mBACXC,EADW,KACJC,EADI,OAEUH,mBAASR,EAAMY,QAFzB,mBAEXA,EAFW,KAEHC,EAFG,OAGML,mBAASR,EAAMc,MAHrB,mBAGXA,EAHW,KAGLC,EAHK,KAKlB,SAASZ,EAASC,EAAMC,EAAMW,GAC1B,GAAIA,EACAL,GACI,SAAAM,GAAS,kCACFA,GADE,kBAEJb,EAAOC,OAGhBU,GAAQ,QACL,GAAID,EAAM,CACbd,EAAMkB,GAAGC,KAAT,aAAoBnB,EAAMoB,SAA1B,YAAsCpB,EAAMqB,QAA5C,YAAuDjB,EAAOC,IAC9D,IAAIiB,EAAW,2BACRZ,GADQ,kBAEVN,EAAOC,IAEZM,GACI,SAAAM,GAAS,kCACFA,GADE,kBAEJb,EAAOC,OAGhBU,GAAQ,GACRf,EAAMuB,SAASD,IASvB,OALItB,EAAMY,SAAWA,GAAUZ,EAAMY,SACjCC,EAAUb,EAAMY,QAChBT,EAASH,EAAMY,OAAO,GAAIZ,EAAMY,OAAO,IAAI,IAI3C,yBAAKX,UAAU,SACX,yBAAKA,UAAU,aACX,kBAAC,EAAD,CAAQK,KAAMI,EAAM,GAAMN,KAAM,EAAGC,KAAML,EAAMK,KAAMF,SAAUA,IAC/D,kBAAC,EAAD,CAAQG,KAAMI,EAAM,GAAMN,KAAM,EAAGC,KAAML,EAAMK,KAAMF,SAAUA,IAC/D,kBAAC,EAAD,CAAQG,KAAMI,EAAM,GAAMN,KAAM,EAAGC,KAAML,EAAMK,KAAMF,SAAUA,KAEnE,yBAAKF,UAAU,aACX,kBAAC,EAAD,CAAQK,KAAMI,EAAM,GAAMN,KAAM,EAAGC,KAAML,EAAMK,KAAMF,SAAUA,IAC/D,kBAAC,EAAD,CAAQG,KAAMI,EAAM,GAAMN,KAAM,EAAGC,KAAML,EAAMK,KAAMF,SAAUA,IAC/D,kBAAC,EAAD,CAAQG,KAAMI,EAAM,GAAMN,KAAM,EAAGC,KAAML,EAAMK,KAAMF,SAAUA,KAEnE,yBAAKF,UAAU,aACX,kBAAC,EAAD,CAAQK,KAAMI,EAAM,GAAMN,KAAM,EAAGC,KAAML,EAAMK,KAAMF,SAAUA,IAC/D,kBAAC,EAAD,CAAQG,KAAMI,EAAM,GAAMN,KAAM,EAAGC,KAAML,EAAMK,KAAMF,SAAUA,IAC/D,kBAAC,EAAD,CAAQG,KAAMI,EAAM,GAAMN,KAAM,EAAGC,KAAML,EAAMK,KAAMF,SAAUA,OCZhEqB,MAxCf,SAAcxB,GAkCV,OACI,kBAAC,EAAD,CAAOS,MAlCC,CACRgB,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,IAyBkBZ,QAASrB,EAAMqB,QAASD,SAAUpB,EAAMoB,SAAUN,KAAMd,EAAMc,KAC5EI,GAAIlB,EAAMkB,GAAIb,KAAML,EAAMK,KAAMO,OAAQZ,EAAMY,OAAQW,SAvBjE,SAAkBb,GAWd,IAVA,IAAMwB,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEFC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAC,IAAD,cACjBD,EAAMC,GADW,GAC5BE,EAD4B,KACzBC,EADyB,KACtBC,EADsB,KAE/B7B,EAAM2B,IAAM3B,EAAM2B,KAAO3B,EAAM4B,IAAM5B,EAAM2B,KAAO3B,EAAM6B,KACxDvC,EAAMkB,GAAGC,KAAT,aAAoBnB,EAAMoB,SAA1B,YAAsCpB,EAAMqB,UAC5CrB,EAAMwC,SAAS,CAACC,QAAS,OAAQC,SAAU,KAC3C1C,EAAM2C,YCxBhBzB,EAAK,IAAI0B,UAAU,sCAwGVC,MA/Ff,SAAa7C,GAAQ,IAAD,EACOQ,mBAAS,CAACiC,QAAS,OAAQC,SAAU,KAD5C,mBACZI,EADY,KACLN,EADK,OAEOhC,mBAAS,kGAFhB,mBAEZuC,EAFY,KAELC,EAFK,OAGWxC,qBAHX,mBAGZa,EAHY,KAGH4B,EAHG,OAIKzC,qBAJL,mBAIZM,EAJY,KAINC,EAJM,OAKKP,mBAAS,GALd,mBAKZJ,EALY,KAKN8C,EALM,OAMW1C,oBAAS,GANpB,mBAMZ2C,EANY,KAMHC,EANG,KAObC,EAAUrD,EAAMqD,QAkBtB,SAASV,IACRH,EAAS,CAACC,QAAS,OAAQC,SAAU,KACrCM,IACAC,IACAlC,IACAqC,GAAW,GAGT,OAxBHE,qBAAU,WACNpC,EAAGqC,UAAY,SAAAC,GACjB,GAAkC,QAA9BA,EAASC,KAAKC,MAAM,EAAG,GAAc,CACxC,IAAID,EAAOE,KAAKC,MAAMJ,EAASC,KAAKC,MAAM,IAC1CV,GAAUS,EAAK,IACfR,GAAYQ,EAAK,IACjB1C,GAAS0C,EAAK,IACdL,GAAW,OAC6B,QAA9BI,EAASC,KAAKC,MAAM,EAAG,GAC9BR,EAAQM,EAASC,KAAKC,MAAM,IACS,QAA9BF,EAASC,KAAKC,MAAM,EAAG,IACjCf,QAcF,kBAAC,IAAD,CAAMkB,YAAaf,EAAML,SACxB,kBAAC,IAAD,CAAOqB,GAAG,QACT,kBAAC,IAAD,kFAA4BT,GAC5B,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAQU,KAAK,KAAKC,WAAS,EAACC,MAAO,CAACC,UAAW,IAC7ChE,QAAS,kBAAMsC,EAAS,CAACC,QAAS,kBAAmBC,SAAUI,EAAML,YADvE,yFAIA,kBAAC,IAAD,CAAQsB,KAAK,KAAKC,WAAS,EAACC,MAAO,CAACC,UAAW,IAAKC,KAAK,YACvDjE,QAAS,kBAAMsC,EAAS,CAACC,QAAS,iBAAkBC,SAAUI,EAAML,YADtE,mEAMF,kBAAC,IAAD,CAAOqB,GAAG,mBACT,kBAAC,IAAD,CAAaM,KAAM,kBAAC,IAAD,CAClBlE,QAAS,kBAAMsC,EAAS,CAACC,QAASK,EAAMJ,SAAUA,SAAUI,EAAML,cADnE,yFAIA,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAQsB,KAAK,KAAKC,WAAS,EAACC,MAAO,CAACC,UAAW,IAC7ChE,QAAO,sBAAE,sBAAAmC,EAAA,sDAAaG,EAAS,CAACC,QAAS,cAAeC,SAAUI,EAAML,UAC/CvB,EAAGC,KAAH,aAAckC,EAAd,MADhB,4CADX,+FAKA,kBAAC,IAAD,CAAQU,KAAK,KAAKC,WAAS,EAACC,MAAO,CAACC,UAAW,IAC7ChE,QAAS,kBAAMmE,QAAQC,IAAI,iBAD7B,gDAMF,kBAAC,IAAD,CAAOR,GAAG,kBACT,kBAAC,IAAD,CAAaM,KAAM,kBAAC,IAAD,CAClBlE,QAAS,kBAAMsC,EAAS,CAACC,QAASK,EAAMJ,SAAUA,SAAUI,EAAML,cADnE,iEAIA,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAQsB,KAAK,KAAKC,WAAS,EAACC,MAAO,CAACC,UAAW,IAC7ChE,QAAS,kBAAMmE,QAAQC,IAAI,iBAD7B,+FAIA,kBAAC,IAAD,CAAQP,KAAK,KAAKC,WAAS,EAACC,MAAO,CAACC,UAAW,IAC7ChE,QAAS,kBAAMmE,QAAQC,IAAI,iBAD7B,gDAMF,kBAAC,IAAD,CAAOR,GAAG,cAAcG,MAAO,CAAEM,UAAW,WAC3C,kBAAC,IAAD,oEACiBlD,GAEL,4BAAsB,kBAAV0B,GAAsB,wGAAlC,IAA4DA,GACtEI,EAE8B,kBAAC,IAAD,CAAcY,KAAK,QAAQE,MAAO,CAAEC,UAAW,MAFnE,kBAAC,EAAD,CAAM9C,SAAU2B,EAAO1B,QAASA,EAASP,KAAMA,EAAM6B,IAAKA,EAChEtC,KAAMS,EAAO,IAAM,IAAK0B,SAAUA,EAAUtB,GAAIA,EAAIN,OAAQR,O,4CCjGtE,WAAuBoE,EAASC,GAAhC,eAAApC,EAAA,sEACuBqC,IAAOvD,KAAKqD,GADnC,cACQG,EADR,yBAESA,EAAOF,IAFhB,4C,sBAMAC,IAAOvD,KAAK,gBACZ,IAAMkC,E,6CAAUuB,CAAQ,sBAAuB,MAG/CC,IAASC,OAAO,kBAAC,EAAD,CAAKzB,QAASA,IAAY0B,SAASC,eAAe,U","file":"static/js/main.20dc8ab3.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../panels/game.css'\r\n\r\nfunction Square(props) {\r\n\r\n    return (\r\n        <button className='cell' onClick={() => props.onChange(props.cell, props.chip, false)}>{props.text}</button>\r\n    );\r\n}\r\n\r\nexport default Square","import React, {useState} from 'react';\r\nimport Square from './Square'\r\nimport '../panels/game.css'\r\n\r\n\r\nfunction Board(props) {\r\n    const [board, setBoard] = useState(props.field);\r\n    const [change, setChange] = useState(props.change);\r\n    const [turn, setTurn] = useState(props.turn);\r\n\r\n    function onChange(cell, chip, from) {\r\n        if (from) {\r\n            setBoard(\r\n                prevState => ({\r\n                    ...prevState,\r\n                    [cell]: chip\r\n                })\r\n            )\r\n            setTurn(true);\r\n        } else if (turn) {\r\n            props.ws.send(`GTG${props.enemy_id}&${props.game_id}&${cell + chip}`);\r\n            let check_board = {\r\n                ...board,\r\n                [cell]: chip\r\n            };\r\n            setBoard(\r\n                prevState => ({\r\n                    ...prevState,\r\n                    [cell]: chip\r\n                })\r\n            );\r\n            setTurn(false);\r\n            props.checkWin(check_board);\r\n        }\r\n    }\r\n\r\n    if (props.change !== change && props.change) {\r\n        setChange(props.change);\r\n        onChange(props.change[0], props.change[1], true)\r\n    }\r\n\r\n    return (\r\n        <div className='field'>\r\n            <div className='board-row'>\r\n                <Square text={board['1']} cell={1} chip={props.chip} onChange={onChange}/>\r\n                <Square text={board['2']} cell={2} chip={props.chip} onChange={onChange}/>\r\n                <Square text={board['3']} cell={3} chip={props.chip} onChange={onChange}/>\r\n            </div>\r\n            <div className='board-row'>\r\n                <Square text={board['4']} cell={4} chip={props.chip} onChange={onChange}/>\r\n                <Square text={board['5']} cell={5} chip={props.chip} onChange={onChange}/>\r\n                <Square text={board['6']} cell={6} chip={props.chip} onChange={onChange}/>\r\n            </div>\r\n            <div className='board-row'>\r\n                <Square text={board['7']} cell={7} chip={props.chip} onChange={onChange}/>\r\n                <Square text={board['8']} cell={8} chip={props.chip} onChange={onChange}/>\r\n                <Square text={board['9']} cell={9} chip={props.chip} onChange={onChange}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Board;","import React from 'react';\r\nimport Board from './Board'\r\n\r\n\r\nfunction Game(props) {\r\n    let field = {\r\n        1: '',\r\n        2: '',\r\n        3: '',\r\n        4: '',\r\n        5: '',\r\n        6: '',\r\n        7: '',\r\n        8: '',\r\n        9: ''\r\n    };\r\n\r\n    function checkWin(board) {\r\n        const lines = [\r\n            [1, 2, 3],\r\n            [4, 5, 6],\r\n            [7, 8, 9],\r\n            [1, 4, 7],\r\n            [2, 5, 8],\r\n            [3, 6, 9],\r\n            [1, 5, 9],\r\n            [3, 5, 7]\r\n        ];\r\n        for (let i = 0; i < lines.length; i++) {\r\n            const [a, b, c] = lines[i];\r\n            if (board[a] && board[a] === board[b] && board[a] === board[c]) {\r\n                props.ws.send(`GTE${props.enemy_id}&${props.game_id}`);\r\n                props.setPanel({current: 'main', previous: ''});\r\n                props.end();\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Board field={field} game_id={props.game_id} enemy_id={props.enemy_id} turn={props.turn}\r\n               ws={props.ws} chip={props.chip} change={props.change} checkWin={checkWin}/>\r\n    )\r\n}\r\n\r\nexport default Game;","import React, {useState, useEffect} from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport {Button, Div, Panel, PanelHeader, PanelHeaderBack, View, PanelSpinner} from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport './panels/game.css'\nimport Game from './tic-tac-toe/Game'\n\n// const ws = new WebSocket('ws://localhost:3001');\nconst ws = new WebSocket('wss://vk-app-server.herokuapp.com/');\n\nasync function getInfo(promise, key) {\n\tconst answer = await bridge.send(promise);\n\treturn answer[key];\n}\n\n// const user_id = Math.floor(Math.random() * 1000);\n\nfunction App(props) {\n\tconst [panel, setPanel] = useState({current: 'main', previous: ''});\n\tconst [enemy, setEnemy] = useState('Поиск противника...');\n\tconst [game_id, setGame_id] = useState();\n\tconst [turn, setTurn] = useState();\n\tconst [cell, setCell] = useState(0);\n\tconst [loading, setLoading] = useState(true);\n\tconst user_id = props.user_id;\n\n\tuseEffect(() => {\n\t    ws.onmessage = response => {\n\t\t\tif (response.data.slice(0, 3) === 'GTF') {\n\t\t\t\tlet data = JSON.parse(response.data.slice(3));\n\t\t\t\tsetEnemy(+data[1]);\n\t\t\t\tsetGame_id(+data[0]);\n\t\t\t\tsetTurn(+data[2]);\n\t\t\t\tsetLoading(false);\n\t\t\t} else if (response.data.slice(0, 3) === 'GTG') {\n\t    \t\tsetCell(response.data.slice(3));\n\t\t\t} else if (response.data.slice(0, 3) === 'GTE') {\n\t\t\t\tend();\n\t\t\t}\n        };\n    });\n\n\tfunction end () {\n\t\tsetPanel({current: 'main', previous: ''});\n\t\tsetEnemy();\n\t\tsetGame_id();\n\t\tsetTurn();\n\t\tsetLoading(true);\n\t}\n\n    return (\n\t\t<View activePanel={panel.current}>\n\t\t\t<Panel id='main'>\n\t\t\t\t<PanelHeader>Выберите игру {user_id}</PanelHeader>\n\t\t\t\t<Div>\n\t\t\t\t\t<Button size='xl' stretched style={{marginTop: 25}}\n\t\t\t\t\t\t\tonClick={() => setPanel({current: 'tic-tac-toe-hub', previous: panel.current})}>\n\t\t\t\t\t\tКрестики-нолики\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button size='xl' stretched style={{marginTop: 25}} mode='secondary'\n\t\t\t\t\t\t\tonClick={() => setPanel({current: 'sea-battle-hub', previous: panel.current})}>\n\t\t\t\t\t\tМорской бой\n\t\t\t\t\t</Button>\n\t\t\t\t</Div>\n\t\t\t</Panel>\n\t\t\t<Panel id='tic-tac-toe-hub'>\n\t\t\t\t<PanelHeader left={<PanelHeaderBack\n\t\t\t\t\tonClick={() => setPanel({current: panel.previous, previous: panel.current})}/>}>\n\t\t\t\t\tКрестики-нолики\n\t\t\t\t</PanelHeader>\n\t\t\t\t<Div>\n\t\t\t\t\t<Button size='xl' stretched style={{marginTop: 25}}\n\t\t\t\t\t\t\tonClick={async () => {setPanel({current: 'tic-tac-toe', previous: panel.current});\n                                ws.send(`GTF${user_id}&`)}}>\n\t\t\t\t\t\tПоиск противника\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button size='xl' stretched style={{marginTop: 25}}\n\t\t\t\t\t\t\tonClick={() => console.log(\"Development\")}>\n\t\t\t\t\t\tРейтинг\n\t\t\t\t\t</Button>\n\t\t\t\t</Div>\n\t\t\t</Panel>\n\t\t\t<Panel id='sea-battle-hub'>\n\t\t\t\t<PanelHeader left={<PanelHeaderBack\n\t\t\t\t\tonClick={() => setPanel({current: panel.previous, previous: panel.current})}/>}>\n\t\t\t\t\tМорской бой\n\t\t\t\t</PanelHeader>\n\t\t\t\t<Div>\n\t\t\t\t\t<Button size='xl' stretched style={{marginTop: 25}}\n\t\t\t\t\t\t\tonClick={() => console.log(\"Development\")}>\n\t\t\t\t\t\tПоиск противника\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button size='xl' stretched style={{marginTop: 25}}\n\t\t\t\t\t\t\tonClick={() => console.log(\"Development\")}>\n\t\t\t\t\t\tРейтинг\n\t\t\t\t\t</Button>\n\t\t\t\t</Div>\n\t\t\t</Panel>\n\t\t\t<Panel id='tic-tac-toe' style={{ textAlign: 'center' }}>\n\t\t\t\t<PanelHeader>\n\t\t\t\t\tБитва ID игры: {game_id}\n\t\t\t\t</PanelHeader>\n                <h1>{typeof enemy !== 'string' && 'ID вашего противника:'} {enemy}</h1>\n\t\t\t\t{!loading ? <Game enemy_id={enemy} game_id={game_id} turn={turn} end={end}\n\t\t\t\t\t\t\t\t  chip={turn ? 'O' : 'X'} setPanel={setPanel} ws={ws} change={cell}/>\n                                  : <PanelSpinner size='large' style={{ marginTop: 50 }} />\n\t\t\t\t}\n\t\t\t</Panel>\n\t\t</View>\n\t);\n}\n\nexport default App;","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n\nasync function getInfo(promise, key) {\n  const answer = await bridge.send(promise);\n  return answer[key];\n}\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\nconst user_id = getInfo('VKWebAppGetUserInfo', 'id');\n\n\nReactDOM.render(<App user_id={user_id}/>, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}