{"version":3,"sources":["tic-tac-toe/Square.js","tic-tac-toe/Board.js","tic-tac-toe/Game.js","App.js","index.js"],"names":["Square","props","className","onClick","onChange","cell","chip","text","Board","useState","field","board","setBoard","change","setChange","turn","setTurn","from","prevState","ws","send","enemy_id","game_id","check_board","checkWin","Game","1","2","3","4","5","6","7","8","9","lines","i","length","a","b","c","setPanel","current","previous","end","WebSocket","bridge","then","data","id","first","last","avatar","App","panel","enemy","setEnemy","setGame_id","setCell","loading","setLoading","data_loading","setData_loading","user_id","first_name","games","setGames","points","setPoints","wins","setWins","useEffect","onmessage","response","slice","JSON","parse","activePanel","style","textAlign","marginTop","src","size","getRootRef","div","stretched","height","mode","left","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7720a194.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../panels/game.css'\r\n\r\nfunction Square(props) {\r\n\r\n    return (\r\n        <button className='cell' onClick={() => props.onChange(props.cell, props.chip, false)}>{props.text}</button>\r\n    );\r\n}\r\n\r\nexport default Square","import React, {useState} from 'react';\r\nimport Square from './Square'\r\nimport '../panels/game.css'\r\n\r\n\r\nfunction Board(props) {\r\n    const [board, setBoard] = useState(props.field);\r\n    const [change, setChange] = useState(props.change);\r\n    const [turn, setTurn] = useState(props.turn);\r\n\r\n    function onChange(cell, chip, from) {\r\n        if (from) {\r\n            setBoard(\r\n                prevState => ({\r\n                    ...prevState,\r\n                    [cell]: chip\r\n                })\r\n            )\r\n            setTurn(true);\r\n        } else if (turn) {\r\n            props.ws.send(`GTG${props.enemy_id}&${props.game_id}&${cell + chip}`);\r\n            let check_board = {\r\n                ...board,\r\n                [cell]: chip\r\n            };\r\n            setBoard(\r\n                prevState => ({\r\n                    ...prevState,\r\n                    [cell]: chip\r\n                })\r\n            );\r\n            setTurn(false);\r\n            props.checkWin(check_board);\r\n        }\r\n    }\r\n\r\n    if (props.change !== change && props.change) {\r\n        setChange(props.change);\r\n        onChange(props.change[0], props.change[1], true)\r\n    }\r\n\r\n    return (\r\n        <div className='field'>\r\n            <div className='board-row'>\r\n                <Square text={board['1']} cell={1} chip={props.chip} onChange={onChange}/>\r\n                <Square text={board['2']} cell={2} chip={props.chip} onChange={onChange}/>\r\n                <Square text={board['3']} cell={3} chip={props.chip} onChange={onChange}/>\r\n            </div>\r\n            <div className='board-row'>\r\n                <Square text={board['4']} cell={4} chip={props.chip} onChange={onChange}/>\r\n                <Square text={board['5']} cell={5} chip={props.chip} onChange={onChange}/>\r\n                <Square text={board['6']} cell={6} chip={props.chip} onChange={onChange}/>\r\n            </div>\r\n            <div className='board-row'>\r\n                <Square text={board['7']} cell={7} chip={props.chip} onChange={onChange}/>\r\n                <Square text={board['8']} cell={8} chip={props.chip} onChange={onChange}/>\r\n                <Square text={board['9']} cell={9} chip={props.chip} onChange={onChange}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Board;","import React from 'react';\r\nimport Board from './Board'\r\n\r\n\r\nfunction Game(props) {\r\n    let field = {\r\n        1: '',\r\n        2: '',\r\n        3: '',\r\n        4: '',\r\n        5: '',\r\n        6: '',\r\n        7: '',\r\n        8: '',\r\n        9: ''\r\n    };\r\n\r\n    function checkWin(board) {\r\n        const lines = [\r\n            [1, 2, 3],\r\n            [4, 5, 6],\r\n            [7, 8, 9],\r\n            [1, 4, 7],\r\n            [2, 5, 8],\r\n            [3, 6, 9],\r\n            [1, 5, 9],\r\n            [3, 5, 7]\r\n        ];\r\n        for (let i = 0; i < lines.length; i++) {\r\n            const [a, b, c] = lines[i];\r\n            if (board[a] && board[a] === board[b] && board[a] === board[c]) {\r\n                props.ws.send(`GTE${props.enemy_id}&${props.game_id}`);\r\n                props.setPanel({current: 'main', previous: ''});\r\n                props.end();\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Board field={field} game_id={props.game_id} enemy_id={props.enemy_id} turn={props.turn}\r\n               ws={props.ws} chip={props.chip} change={props.change} checkWin={checkWin}/>\r\n    )\r\n}\r\n\r\nexport default Game;","import React, {useEffect, useState} from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport {Avatar, Button, Div, Panel, PanelHeader, PanelHeaderBack, PanelSpinner, View} from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport './panels/game.css'\nimport Game from './tic-tac-toe/Game'\n\n// const ws = new WebSocket('ws://localhost:5000');\nconst ws = new WebSocket('wss://vk-app-server.herokuapp.com/');\n\n\nbridge.send('VKWebAppGetUserInfo')\n        .then(data => {\n\t\tconst id = data['id'];\n\t\tconst first = data['first_name'];\n\t\tconst last = data['last_name'];\n\t\tconst avatar = data['photo_200'];\n\t\tws.send(`INF${id}&${first}&${last}&${avatar}`);\n        })\n\n\n// const user_id = Math.floor(Math.random() * 1000);\n\n\nfunction App() {\n\tconst [panel, setPanel] = useState({current: 'main', previous: ''});\n\tconst [enemy, setEnemy] = useState('Поиск противника...');\n\tconst [game_id, setGame_id] = useState();\n\tconst [turn, setTurn] = useState();\n\tconst [cell, setCell] = useState(0);\n\tconst [loading, setLoading] = useState(true);\n\tconst [data_loading, setData_loading] = useState(true);\n\tconst [user_id, setUser_id] = useState();\n\tconst [first_name, setFirst_name] = useState();\n\tconst [avatar, setAvatar] = useState();\n\tconst [games, setGames] = useState(0);\n\tconst [points, setPoints] = useState(0);\n\tconst [wins, setWins] = useState();\n\n\tuseEffect(() => {\n\t    ws.onmessage = response => {\n\t\t\tif (response.data.slice(0, 3) === 'GTF') {\n\t\t\t\tlet data = JSON.parse(response.data.slice(3));\n\t\t\t\tsetEnemy(+data[1]);\n\t\t\t\tsetGame_id(+data[0]);\n\t\t\t\tsetTurn(+data[2]);\n\t\t\t\tsetLoading(false);\n\t\t\t} else if (response.data.slice(0, 3) === 'GTG') {\n\t    \t\tsetCell(response.data.slice(3));\n\t\t\t} else if (response.data.slice(0, 3) === 'GTE') {\n\t\t\t\tend();\n\t\t\t} else if (response.data.slice(0, 3) === 'INF') {\n\t\t\t\tlet data = JSON.parse(response.data.slice(3));\n\t\t\t\tsetGames(data.games);\n\t\t\t\tsetPoints(data.points);\n\t\t\t\tsetWins(data.wins);\n\t\t\t\tsetData_loading(false);\n\n\t\t\t}\n        };\n    });\n\n\tfunction end () {\n\t\tsetPanel({current: 'main', previous: ''});\n\t\tsetEnemy('Поиск противника...');\n\t\tsetGame_id();\n\t\tsetTurn();\n\t\tsetLoading(true);\n\t}\n\n\tif (data_loading) {\n\t\treturn <View activePanel={loading}><Panel id='loading' style={{ textAlign: 'center', marginTop: '100px' }}><h1>Loading...</h1></Panel></View>\n\t} else {\t\n\t\treturn (\n\t\t\t<View activePanel={panel.current}>\n\t\t\t\t<Panel id='main'>\n\t\t\t\t\t<PanelHeader>Выберите игру, {first_name}</PanelHeader>\n\t\t\t\t\t<Div style={{ textAlign: 'center' }}>\n\t\t\t\t\t\t<Avatar src={avatar} size={80} getRootRef={div => div.style='display: inline-block '} />\n\t\t\t\t\t\t<h1>Игр: {games} Побед: {wins} Очков: {points}</h1>\n\t\t\t\t\t</Div>\n\t\t\t\t\t<Div>\n\t\t\t\t\t{/*Кол-во сыгранных игр, побед, */}\n\t\t\t\t\t\t<Button size='xl' stretched style={{ marginTop: 25, height: 60 }}\n\t\t\t\t\t\t\t\tonClick={() => setPanel({current: 'tic-tac-toe-hub', previous: panel.current})}>\n\t\t\t\t\t\t\tКрестики-нолики\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button size='xl' stretched style={{ marginTop: 25, height: 60 }} mode='secondary'\n\t\t\t\t\t\t\t\tonClick={() => setPanel({current: 'sea-battle-hub', previous: panel.current})}>\n\t\t\t\t\t\t\tМорской бой\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Div>\n\t\t\t\t</Panel>\n\t\t\t\t<Panel id='tic-tac-toe-hub'>\n\t\t\t\t\t<PanelHeader left={<PanelHeaderBack\n\t\t\t\t\t\tonClick={() => setPanel({current: panel.previous, previous: panel.current})}/>}>\n\t\t\t\t\t\tКрестики-нолики\n\t\t\t\t\t</PanelHeader>\n\t\t\t\t\t<Div>\n\t\t\t\t\t\t<Button size='xl' stretched style={{ marginTop: 25 }}\n\t\t\t\t\t\t\t\tonClick={() => {setPanel({current: 'tic-tac-toe', previous: panel.current});\n\t\t\t\t\t\t\tws.send(`GTF${user_id}&`)}}>\n\t\t\t\t\t\t\tПоиск противника\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button size='xl' stretched style={{ marginTop: 25 }}\n\t\t\t\t\t\t\t\tonClick={() => console.log(\"Development\")}>\n\t\t\t\t\t\t\tРейтинг\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Div>\n\t\t\t\t</Panel>\n\t\t\t\t<Panel id='sea-battle-hub'>\n\t\t\t\t\t<PanelHeader left={<PanelHeaderBack\n\t\t\t\t\t\tonClick={() => setPanel({current: panel.previous, previous: panel.current})}/>}>\n\t\t\t\t\t\tМорской бой\n\t\t\t\t\t</PanelHeader>\n\t\t\t\t\t<Div>\n\t\t\t\t\t\t<Button size='xl' stretched style={{ marginTop: 25 }}\n\t\t\t\t\t\t\t\tonClick={() => console.log(\"Development\")}>\n\t\t\t\t\t\t\tПоиск противника\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button size='xl' stretched style={{ marginTop: 25 }}\n\t\t\t\t\t\t\t\tonClick={() => console.log(\"Development\")}>\n\t\t\t\t\t\t\tРейтинг\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Div>\n\t\t\t\t</Panel>\n\t\t\t\t<Panel id='tic-tac-toe' style={{ textAlign: 'center' }}>\n\t\t\t\t\t<PanelHeader>\n\t\t\t\t\t\tБитва ID игры: {game_id}\n\t\t\t\t\t</PanelHeader>\n\t\t\t\t<h1>{typeof enemy !== 'string' && 'ID вашего противника:'} {enemy}</h1>\n\t\t\t\t\t{!loading ? <Game enemy_id={enemy} game_id={game_id} turn={turn} end={end}\n\t\t\t\t\t\t\t\t\t\tchip={turn ? 'O' : 'X'} setPanel={setPanel} ws={ws} change={cell}/>\n\t\t\t\t\t\t\t: <PanelSpinner size='large' style={{ marginTop: 50 }} />\n\t\t\t\t\t}\n\t\t\t\t</Panel>\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nexport default App;","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}